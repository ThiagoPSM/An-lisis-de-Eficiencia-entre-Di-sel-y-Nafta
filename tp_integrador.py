# -*- coding: utf-8 -*-
"""TP-Integrador.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10bwbVQyrlVs3eTG92N7D61zPELHggXNJ
"""

import pandas as pd
import math, statistics
import matplotlib.pyplot as plt

# Leer el archivo CSV
df = pd.read_csv("https://docs.google.com/spreadsheets/d/1AHQq8C94BCIsKgJCyyTNKLXiFrhO_r3JP7o3ad5Qbj4/export?format=csv")
df['Fuel_Type'] = df['Fuel_Type'].replace('Petrol', 'Nafta')
df = df.drop([2]) # Eliminar valor atípico

rows = len(df.Car_ID)

box = df.boxplot('Mileage', by='Fuel_Type')

box.set_title("")
plt.ylabel("km/l")
plt.xlabel("Combustible")
plt.suptitle("Eficiencia según combustible")
plt.grid() #Elimina la grilla del fondo

print(df.groupby('Fuel_Type')['Mileage'].describe())

diesel = ([], [])
nafta = ([], [])

for i in range(rows):
  if (df.Fuel_Type.get(i) == 'Diesel'):
    diesel[0].append(df.Engine.get(i))
    diesel[1].append(df.Mileage.get(i))
    # diesel.append((df.Engine.get(i), df.Mileage.get(i)))
  if (df.Fuel_Type.get(i) == 'Nafta'):
    nafta[0].append(df.Engine.get(i))
    nafta[1].append(df.Mileage.get(i))

print(df.groupby('Fuel_Type')['Engine'].describe())

fig, ax = plt.subplots()
#ax.scatter(df.Engine, df.Mileage)
scatter_diesel = ax.scatter(diesel[0], diesel[1], label='Diesel', color='tab:blue')
scatter_nafta = ax.scatter(nafta[0], nafta[1], label='Nafta', color='tab:orange')
ax.legend()

plt.title('Relación entre cilindrada y eficiencia de consumo')
plt.xlabel('Centímetros cúbicos (cc)')
plt.ylabel('Eficiencia (km/l)')
plt.show()

plt.scatter(diesel[0], diesel[1])
plt.title('Diesel')
plt.xlabel('Centímetros cúbicos (cc)')
plt.ylabel('Eficiencia (km/l)')

plt.scatter(nafta[0], nafta[1])
plt.title('Nafta')
plt.xlabel('Centímetros cúbicos (cc)')
plt.ylabel('Eficiencia (km/l)')

años_d = {}
años_n = {}

for i in range(rows):

  if (df.Fuel_Type.get(i) == 'Diesel'):
    if df.Year.get(i) not in años_d:
      años_d[df.Year.get(i)] = []
    años_d[df.Year.get(i)].append(df.Mileage.get(i))

  if (df.Fuel_Type.get(i) == 'Nafta'):
    if df.Year.get(i) not in años_n:
      años_n[df.Year.get(i)] = []
    años_n[df.Year.get(i)].append(df.Mileage.get(i))

for year in años_d:
  años_d[year] = statistics.mean(años_d[year])

for year in años_n:
  años_n[year] = statistics.mean(años_n[year])

del(años_d[2021])

print(años_d[2016])
print(años_d[2020])
print(años_n[2016])
print(años_n[2020])

years = sorted(list(set(list(años_d.keys()) + list(años_n.keys()))))

# Valores de eficiencia media para cada año
diesel_means = [años_d[year] if year in años_d else 0 for year in years]
nafta_means = [años_n[year] if year in años_n else 0 for year in years]

# Posición de las barras
bar_width = 0.4
index = range(len(years))

# Crear el gráfico de barras
fig, ax = plt.subplots()

bar_diesel = ax.bar([p - bar_width/2 for p in index], diesel_means, width=bar_width, label='Diesel', color='tab:blue')
bar_nafta = ax.bar([p + bar_width/2 for p in index], nafta_means, width=bar_width, label='Nafta', color='tab:orange')

ax.set_xticks(index)
ax.set_xticklabels(years)
ax.legend()

plt.title('Variación en la eficiencia por año')
plt.xlabel('Año')
plt.ylabel('Eficiencia media (km/l)')
plt.ylim(0, 25)

plt.show()

